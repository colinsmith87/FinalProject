CREATE TABLE STORES (
SLOCATION   VARCHAR2(255) NOT NULL,
CONSTRAINT STORE_PRIMARY_KEY PRIMARY KEY (SLOCATION));

CREATE TABLE EMPLOYEE (
EMPLOYEEID  NUMBER(4) NOT NULL,
FNAME       VARCHAR2(255) NOT NULL,
LNAME       VARCHAR2(255) NOT NULL,
SALARY      NUMBER NOT NULL,
PHONE       NUMBER(10) NOT NULL,
STREET      VARCHAR2(255) NOT NULL,
CITY        VARCHAR2(255) NOT NULL,
ADDSTATE    CHAR(2) NOT NULL,
ZIP         NUMBER(5) NOT NULL,
DATEOFBIRTH DATE NOT NULL,
STORELOC    VARCHAR2(255) NOT NULL,
CONSTRAINT EMPLOYEE_PRIMARY_KEY PRIMARY KEY (EMPLOYEEID),
CONSTRAINT EMPLOYEE_FOREIGN_KEY FOREIGN KEY (STORELOC) REFERENCES STORES (SLOCATION));

CREATE TABLE DEPENDENT (
FNAME           VARCHAR2(255) NOT NULL,
LNAME           VARCHAR2(255) NOT NULL,
RELATION        VARCHAR2(255) NOT NULL,
PHONE           NUMBER(10) NOT NULL,
EMPID           NUMBER NOT NULL,
CONSTRAINT DEPENDENT_PRIMARY_KEY PRIMARY KEY (EMPID,FNAME,LNAME),
CONSTRAINT DEPENDENT_FOREIGN_KEY FOREIGN KEY (EMPID) REFERENCES EMPLOYEE (EMPLOYEEID));

CREATE TABLE FOOD_ITEMS (
ITEMNAME        VARCHAR2(255) NOT NULL,
ITEMCATEGORY    VARCHAR2(255) NOT NULL,
PRICE           NUMBER(4,2) NOT NULL,
SELLBY          DATE NOT NULL,
CONSTRAINT FOOD_ITEMS_PRIMARY_KEY PRIMARY KEY (ITEMNAME));

CREATE TABLE IN_STOCK (
QUANTITY    NUMBER,
FOODNAME    VARCHAR2(255) NOT NULL,
STORELOC    VARCHAR2(255) NOT NULL,
CONSTRAINT IN_STOCK_PRIMARY_KEY PRIMARY KEY (STORELOC,FOODNAME),
CONSTRAINT IN_STOCK_FOREIGN_KEY_1 FOREIGN KEY (STORELOC) REFERENCES STORES (SLOCATION),
CONSTRAINT IN_STOCK_FOREIGN_KEY_2 FOREIGN KEY (FOODNAME) REFERENCES FOOD_ITEMS (ITEMNAME));

CREATE TABLE TRANSACTIONS (
TRANSACTIONID   NUMBER,
PRICE           NUMBER(4,2) NOT NULL,
FOODITEM        VARCHAR2(255) NOT NULL,
STORELOC        VARCHAR2(255) NOT NULL,
CONSTRAINT TRANSACTIONS_PRIMARY_KEY PRIMARY KEY (TRANSACTIONID),
CONSTRAINT TRANSACTIONS_FOREIGN_KEY FOREIGN KEY (STORELOC) REFERENCES STORES (SLOCATION));

CREATE TABLE MEMBERS (
MEMBERID    NUMBER,
FNAME       VARCHAR2(255) NOT NULL,
LNAME       VARCHAR2(255) NOT NULL,
DATEOFBIRTH DATE NOT NULL,
PHONE       NUMBER(10) NOT NULL,
POINTS      NUMBER,
STORELOC    VARCHAR2(255) NOT NULL,
CONSTRAINT MEMBER_PRIMARY_KEY PRIMARY KEY (MEMBERID),
CONSTRAINT MEMBER_FOREIGN_KEY FOREIGN KEY (STORELOC) REFERENCES STORES (SLOCATION));

INSERT INTO STORES VALUES ('Ipswich');

INSERT INTO FOOD_ITEMS VALUES ('Banana','Fruit',1.50,'1-JAN-95');
INSERT INTO FOOD_ITEMS VALUES ('Apple','Fruit',1.00,'1-JAN-95');
INSERT INTO FOOD_ITEMS VALUES ('Watermelon','Fruit',2.50,'1-JAN-95');
INSERT INTO FOOD_ITEMS VALUES ('Turkey','Deli',3.50,'1-JAN-95');
INSERT INTO FOOD_ITEMS VALUES ('Roast Beef','Deli',1.50,'1-JAN-95');
INSERT INTO FOOD_ITEMS VALUES ('Forks','Misc',1.50,'1-JAN-95');
INSERT INTO FOOD_ITEMS VALUES ('Cake','Baked Goods',1.50,'1-JAN-95');
INSERT INTO FOOD_ITEMS VALUES ('Pizza','Frozen',1.50,'1-JAN-95');
INSERT INTO FOOD_ITEMS VALUES ('Ice Cream','Frozen',1.50,'1-JAN-95');
INSERT INTO FOOD_ITEMS VALUES ('Eggs','Produce',1.50,'1-JAN-95');
INSERT INTO FOOD_ITEMS VALUES ('Broccoli','Vegetable',1.50,'1-JAN-95');
INSERT INTO FOOD_ITEMS VALUES ('Kix','Cereal',1.50,'1-JAN-95');
INSERT INTO FOOD_ITEMS VALUES ('Oatmeal','Cereal',1.50,'1-JAN-95');
INSERT INTO FOOD_ITEMS VALUES ('Rice','Grain',1.50,'1-JAN-95');
INSERT INTO FOOD_ITEMS VALUES ('White Bread','Bread',1.50,'1-JAN-95');

INSERT INTO IN_STOCK VALUES (10,'Banana','Ipswich');
INSERT INTO IN_STOCK VALUES (10,'Apple','Ipswich');
INSERT INTO IN_STOCK VALUES (10,'Watermelon','Ipswich');
INSERT INTO IN_STOCK VALUES (10,'Turkey','Ipswich');
INSERT INTO IN_STOCK VALUES (10,'Roast Beef','Ipswich');
INSERT INTO IN_STOCK VALUES (10,'Forks','Ipswich');
INSERT INTO IN_STOCK VALUES (10,'Cake','Ipswich');
INSERT INTO IN_STOCK VALUES (10,'Pizza','Ipswich');
INSERT INTO IN_STOCK VALUES (10,'Ice Cream','Ipswich');
INSERT INTO IN_STOCK VALUES (10,'Eggs','Ipswich');
INSERT INTO IN_STOCK VALUES (10,'Broccoli','Ipswich');
INSERT INTO IN_STOCK VALUES (10,'Kix','Ipswich');
INSERT INTO IN_STOCK VALUES (10,'Oatmeal','Ipswich');
INSERT INTO IN_STOCK VALUES (10,'Rice','Ipswich');
INSERT INTO IN_STOCK VALUES (10,'White Bread','Ipswich');

CREATE TRIGGER DECREMENT_STOCK
AFTER INSERT ON TRANSACTIONS
FOR EACH ROW
BEGIN
    UPDATE IN_STOCK
    SET IN_STOCK.QUANTITY = IN_STOCK.QUANTITY - 1
    WHERE IN_STOCK.FOODNAME = :NEW.FOODITEM 
    AND IN_STOCK.STORELOC = :NEW.STORELOC;
    DELETE FROM IN_STOCK
    WHERE IN_STOCK.QUANTITY = 0;
    DELETE FROM FOOD_ITEMS
    WHERE NOT EXISTS (SELECT * FROM IN_STOCK WHERE IN_STOCK.FOODNAME = FOOD_ITEMS.ITEMNAME);
END;

INSERT INTO TRANSACTIONS VALUES (2,5.50,'Banana','Ipswich');
INSERT INTO TRANSACTIONS VALUES (3,5.50,'Banana','Ipswich');
INSERT INTO TRANSACTIONS VALUES (4,5.50,'Banana','Ipswich');
INSERT INTO TRANSACTIONS VALUES (5,5.50,'Banana','Ipswich');
INSERT INTO TRANSACTIONS VALUES (6,5.50,'Banana','Ipswich');
INSERT INTO TRANSACTIONS VALUES (7,5.50,'Banana','Ipswich');
INSERT INTO TRANSACTIONS VALUES (8,5.50,'Banana','Ipswich');
INSERT INTO TRANSACTIONS VALUES (9,5.50,'Banana','Ipswich');
INSERT INTO TRANSACTIONS VALUES (10,5.50,'Banana','Ipswich');
INSERT INTO TRANSACTIONS VALUES (11,5.50,'Banana','Ipswich');
